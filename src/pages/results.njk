---js
{
  layout: "layouts/base.njk",
  permalink: "/results/index.html",
  pagination: {
    data: "results",
    size: Infinity,
    alias: "result",
    reverse: true,
    before: function (data) {

      const groupBy = (input, key) => {
        return Object.entries(
          input.reduce((acc, currentValue) => {
            let groupKey = currentValue[key];
            if (!acc[groupKey]) {
              acc[groupKey] = [];
            }
            acc[groupKey].push(currentValue);
            return acc;
          }, {})
        ).map(([year, content]) => ({ year, content }));
      };

      const obj = groupBy(data, "year");

      return obj;

    }
  },
  eleventyComputed: {
    title: "Results"
  }
}
---

<h1 style="margin-bottom:2rem;">
  Results from 2015 - {{ result[0].year }}
</h1>

{% for year, set in results | groupby('year') | dictsort | reverse %}
  <table id="results-{{ year }}">
    <caption>
      {% set firstResult = set[0] %}
      {% renderTemplate "liquid", firstResult %}
        <span>{{ year }}</span> {{ event_date | date: "%A, %B %d" }}
      {% endrenderTemplate %}
    </caption>
    <thead>
      <th scope="col">Pos</th>
      <th scope="col" style="width:100%">Name</th>
      <th scope="col">Time</th>
    </thead>
    <tbody>
      {% for result in set | sort(attribute="position") %}
        <tr>
          <td>
            {{ result.position }}
          </td>
          <td style="width:100%">
            {{ result.name | safe }}
          </td>
          <td>
            {{ result.time_as_string }}
          </td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
{% endfor %}
